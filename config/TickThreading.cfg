# Configuration file
####################
# general
####################

general {
    # Whether worlds should be allowed to unload.
    B:allowWorldUnloading=true

    # Whether to notify admins if TT anti-cheat detects cheating
    B:antiCheatNotify=false

    # Number of unloaded chunks to keep cached. Replacement for Forge's dormant chunk cache, which tends to break. Minimum size of 100
    I:chunkCacheSize=2000

    # Interval between chunk garbage collections in ticks
    I:chunkGCInterval=1200

    # Whether to clean worlds on unload - this should fix some memory leaks due to mods holding on to world objects
    B:cleanWorlds=true
    B:concurrentNetworkTicks=false

    # The time(seconds) of being frozen which will trigger the DeadLockDetector. Set to 1 to instead detect lag spikes.
    I:deadLockTime=35

    # List of dimensions not to enable fast spawning in.
    I:disableFastMobSpawningDimensions <
        -1
        1
     >

    # Name of the command to be used for profiling reports.
    S:dumpCommandName=dump
    B:enableBugWarningMessage=true

    # If enabled, TT's alternative mob spawning implementation will be used.
    B:enableFastMobSpawning=true

    # If the server should shut down when a deadlock is detected
    B:exitOnDeadlock=false

    # If more entities than this are loaded per player in a world, mob spawning will be disabled in that world.
    I:maxEntitiesPerPlayer=1000

    # Maximum number of entity items allowed per chunk. 0 = no limit.
    I:maxItemsPerChunk=0

    # The message to be displayed if a deadlock is detected. (Only sent if exitOnDeadlock is on)
    S:messageDeadlockDetected=The server appears to have frozen and will restart soon if it does not recover. :(

    # The message to be displayed if the server recovers from an apparent deadlock. (Only sent if exitOnDeadlock is on)
    S:messageDeadlockRecovered=The server has recovered and will not need to restart. :)

    # The message to be displayed when the server attempts to save and stop after a deadlock. (Only sent if exitOnDeadlock is on)
    S:messageDeadlockSavingExiting=The server is saving the world and restarting - be right back!

    # Mob spawning multiplier. Default is 1, can be a decimal.
    D:mobSpawningMultiplier=1.0

    # Name of the command to be used for profiling reports.
    S:profileCommandName=profile

    # Location to store profiling information to, relative to the server folder. For example, why not store it in a computercraft computer's folder?
    S:profilingFileName=world/computer/<computer id>/profile.txt

    # Interval, in minutes, to record profiling information to disk. 0 = never. Recommended >= 2.
    I:profilingInterval=0

    # Whether to write periodic profiling in JSON format
    B:profilingJson=false

    # Whether to prevent repeated chunk updates which can cause rendering issues and disconnections for slow clients/connections.
    B:rateLimitChunkUpdates=true

    # If a player must be opped to use /dump
    B:requireOpsForDumpCommand=true

    # If a player must be opped to use /profile
    B:requireOpsForProfileCommand=true

    # If a player must be opped to use /ticks
    B:requireOpsForTicksCommand=true

    # Time between partial saves, in ticks.
    I:saveInterval=180

    # Whether chunks within 200 blocks of world spawn points should always be loaded.
    B:shouldLoadSpawn=false

    # TPS the server should try to run at.
    I:targetTPS=20

    # number of threads to use to tick. 0 = automatic
    I:tickThreads=0

    # Name of the command to be used for performance stats. Defaults to ticks.
    S:ticksCommandName=ticks

    # Name of the command to be used for TPS reports.
    S:tpsCommandName=tps

    # Allows tick rate to vary per region so that each region uses at most 50ms on average per tick.
    B:variableRegionTickRate=true
    B:waitForEntityTickCompletion=true
}


